3: mid = 0
2: end = 1
1: start = 0
(gdb) s
41			mid = (start + end) / 2;
3: mid = 0
2: end = 1
1: start = 0
(gdb) s
42			printf("sort (%d-%d, %d-%d) %d %d %d %d %d %d %d %d\n", 
3: mid = 0
2: end = 1
1: start = 0
(gdb) s
sort (0-0, 1-1) 5 2 4 7 1 3 2 6
45			sort(start, mid);
3: mid = 0
2: end = 1
1: start = 0
(gdb) s
sort (start=0, end=0) at main.c:40
40		if (start < end) {
3: mid = 0

2: end = 0
1: start = 0
(gdb) s
52	}
3: mid = 0
2: end = 0
1: start = 0
(gdb) s
sort (start=0, end=1) at main.c:46
46			sort(mid + 1, end); 
3: mid = 0
2: end = 1
1: start = 0
(gdb) s
sort (start=1, end=1) at main.c:40
40		if (start < end) {
3: mid = 0
2: end = 1
1: start = 1
(gdb) s
52	}
3: mid = 0
2: end = 1
1: start = 1
(gdb) s
sort (start=0, end=1) at main.c:47
47			merge(start, mid, end);
3: mid = 0
2: end = 1
1: start = 0

